<% layout("/layouts/boilerplate") %>

<style>
  .filters-container {
    position: relative;
    width: 100%;
    padding: 0 40px;
    margin: 20px 0;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  #filters {
    display: flex;
    overflow-x: auto;
    scroll-behavior: smooth;
    -ms-overflow-style: none;
    scrollbar-width: none;
    padding: 10px 0;
  }

  #filters::-webkit-scrollbar {
    display: none;
  }

  .filter {
    text-align: center;
    margin-right: 2rem;
    opacity: 0.5;
    flex: 0 0 auto;
    cursor: pointer;
    transition: all 0.3s ease;
    transform: scale(1); /* Base scale for smooth transition */
  }

  .filter img {
    width: 24px;
    height: 24px;
    object-fit: contain;
  }

  /* Filter hover effect applies to the entire element */
  .filter:hover {
    opacity: 1;
    transform: scale(1.05); /* Subtle pop effect on hover */
  }

  .filter p {
    margin: 8px 0 0 0;
    font-size: 0.8rem;
    white-space: nowrap;
  }

  .nav-arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 32px;
    height: 32px;
    background: white;
    border: 1px solid #ddd;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 10; /* Increased to ensure arrows are always on top */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: opacity 0.3s ease, background-color 0.3s ease,
      transform 0.3s ease;
  }

  .nav-arrow:hover {
    background: #f7f7f7;
    transform: translateY(-50%) scale(1.1);
  }

  .nav-arrow.left {
    left: 0;
  }

  .nav-arrow.right {
    right: 0;
  }

  .tax-info {
    display: none;
  }

  .tax-toggle {
    border: 1px solid black;
    border-radius: 1rem;
    height: 3.25rem;
    padding: 1rem;
    margin-left: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  /* Center tax toggle on mobile view */
  @media (max-width: 768px) {
    .tax-toggle {
      margin: 1rem auto; /* Add vertical margin and center horizontally */
      max-width: fit-content;
      width: auto;
    }

    .tax-toggle .form-check {
      margin: 0; /* Remove any default margins */
      justify-content: center; /* Center the switch and label */
    }
  }
</style>

<div class="filters-container">
  <div class="nav-arrow left" onclick="scrollFilters('left')">
    <i class="fas fa-chevron-left"></i>
  </div>
  <div id="filters">
    <a
      href="/listings?category=Trending"
      class="text-decoration-none text-dark"
    >
      <div class="filter">
        <div>
          <img src="/assets/trending.png" alt="Trending" />
        </div>
        <p>Trending</p>
      </div>
    </a>

    <a
      href="/listings?category=Amazing views"
      class="text-decoration-none text-dark"
    >
      <div class="filter">
        <div>
          <img src="/assets/amazing.png" alt="Amazing" />
        </div>
        <p>Amazing views</p>
      </div>
    </a>

    <a
      href="/listings?category=Iconic cities"
      class="text-decoration-none text-dark"
    >
      <div class="filter">
        <div>
          <img src="/assets/cities.png" alt="cities" />
        </div>
        <p>Iconic cities</p>
      </div>
    </a>

    <a href="/listings?category=Surfing" class="text-decoration-none text-dark">
      <div class="filter">
        <div>
          <img src="/assets/surfing.png" alt="surfing" />
        </div>
        <p>Surfing</p>
      </div>
    </a>

    <a href="/listings?category=Beach" class="text-decoration-none text-dark">
      <div class="filter">
        <div>
          <img src="/assets/beach.png" alt="beach" />
        </div>
        <p>Beach</p>
      </div>
    </a>

    <a
      href="/listings?category=Amazing pools"
      class="text-decoration-none text-dark"
    >
      <div class="filter">
        <div>
          <img src="/assets/pool.png" alt="pools" />
        </div>
        <p>Amazing pools</p>
      </div>
    </a>

    <a href="/listings?category=Castles" class="text-decoration-none text-dark">
      <div class="filter">
        <div>
          <img src="/assets/castles.png" alt="castles" />
        </div>
        <p>Castles</p>
      </div>
    </a>

    <a
      href="/listings?category=Mountains"
      class="text-decoration-none text-dark"
    >
      <div class="filter">
        <div>
          <img src="/assets/mountains.png" alt="mountains" />
        </div>
        <p>Mountains</p>
      </div>
    </a>

    <a href="/listings?category=Domes" class="text-decoration-none text-dark">
      <div class="filter">
        <div>
          <img src="/assets/domes.png" alt="domes" />
        </div>
        <p>Domes</p>
      </div>
    </a>

    <a href="/listings?category=Arctic" class="text-decoration-none text-dark">
      <div class="filter">
        <div>
          <img src="/assets/coolplace.png" alt="Arctic" />
        </div>
        <p>Arctic</p>
      </div>
    </a>
  </div>
  <div class="nav-arrow right" onclick="scrollFilters('right')">
    <i class="fas fa-chevron-right"></i>
  </div>
</div>

<div class="tax-toggle">
  <div
    class="form-check form-switch d-flex flex-row-reverse align-items-center p-3"
  >
    <input
      class="form-check-input ms-2"
      type="checkbox"
      role="switch"
      id="flexSwitchCheckDefault"
    />
    <label class="form-check-label" for="flexSwitchCheckDefault">
      Display total after taxes
    </label>
  </div>
</div>

<div
  class="row row-cols-lg-3 row-cols-md-2 row-cols-sm-1 mt-3"
  id="listings-container"
>
  <% for(let listing of allListings){ %>
  <a
    href="/listings/<%= listing._id %>"
    class="listing-link"
    data-category="<%= listing.category %>"
  >
    <div class="card col listing-card">
      <img
        src="<%= listing.image.url %>"
        class="card-img-top"
        alt="listing img"
        style="height: 25rem"
      />
      <div class="card-body">
        <p class="card-text">
          <b> <%= listing.title %> </b> <br />
          Price: &#8377;<%= listing.price ?
          listing.price.toLocaleString("en-IN") : 'N/A' %> /
          <b>Night</b>
          <i class="tax-info">&nbsp;&nbsp; +18% GST</i>
        </p>
      </div>
    </div>
  </a>
  <% } %>
</div>

<script>
  let taxSwitch = document.getElementById("flexSwitchCheckDefault");
  taxSwitch.addEventListener("click", () => {
    let taxInfo = document.getElementsByClassName("tax-info");
    for (info of taxInfo) {
      if (info.style.display != "inline") {
        info.style.display = "inline";
      } else {
        info.style.display = "none";
      }
    }
  });

  // Set initial opacity based on current category
  document.addEventListener("DOMContentLoaded", function () {
    // Get the current category from URL parameters
    const urlParams = new URLSearchParams(window.location.search);
    const currentCategory = urlParams.get("category");

    if (currentCategory) {
      // Find the filter link with the matching category
      const filterLinks = document.querySelectorAll("#filters a");

      filterLinks.forEach((link) => {
        // Extract category from the href attribute
        const linkHref = link.getAttribute("href");
        const linkParams = new URLSearchParams(linkHref.split("?")[1]);
        const linkCategory = linkParams.get("category");

        // Set opacity based on whether this is the active category
        if (linkCategory === currentCategory) {
          link.querySelector(".filter").style.opacity = "1";
        } else {
          link.querySelector(".filter").style.opacity = "0.5";
        }
      });
    }

    // Initialize arrow visibility on page load
    updateArrowVisibility();

    // Add scroll event listener to update arrow visibility during scroll with debounce
    const filters = document.getElementById("filters");
    let scrollTimeout;
    filters.addEventListener("scroll", function () {
      clearTimeout(scrollTimeout);
      scrollTimeout = setTimeout(updateArrowVisibility, 50);
    });

    // Add window resize event to check arrow visibility
    window.addEventListener("resize", updateArrowVisibility);
  });

  // Check if scrolling is needed and show/hide arrows accordingly
  function updateArrowVisibility() {
    const filters = document.getElementById("filters");
    const leftArrow = document.querySelector(".nav-arrow.left");
    const rightArrow = document.querySelector(".nav-arrow.right");

    // Hide left arrow if at start of scroll
    if (filters.scrollLeft <= 20) {
      leftArrow.style.opacity = "0";
      leftArrow.style.pointerEvents = "none";
    } else {
      leftArrow.style.opacity = "1";
      leftArrow.style.pointerEvents = "auto";
    }

    // Hide right arrow if at end of scroll
    const isAtEnd =
      Math.ceil(filters.scrollLeft + filters.clientWidth) >=
      filters.scrollWidth - 20;
    if (isAtEnd) {
      rightArrow.style.opacity = "0";
      rightArrow.style.pointerEvents = "none";
    } else {
      rightArrow.style.opacity = "1";
      rightArrow.style.pointerEvents = "auto";
    }
  }

  function scrollFilters(direction) {
    const filters = document.getElementById("filters");
    const scrollAmount = 250; // Increased to account for filter width + margin

    if (direction === "left") {
      filters.scrollLeft -= scrollAmount;
    } else {
      filters.scrollLeft += scrollAmount;
    }

    // Update arrow visibility after scrolling
    setTimeout(updateArrowVisibility, 300); // Wait for scroll animation to complete
  }
</script>
